Agisci come un test engineer esperto. Ti verrà fornito un caso d’uso in formato TXT con struttura formale.

Il tuo compito è generare un elenco JSON di test case che verifichino il comportamento funzionale del sistema, con copertura di flusso base, alternative, eccezioni, e pre/postcondizioni.

Esempio di Formato JSON (restituisci solo un array di oggetti):
{
  "test_case_id": "UC2_TC2",
  "title": "Input incompleto",
  "preconditions": "Utente autenticato",
  "postconditions": "Nessuna modifica salvata",
  "test_steps": [
    { "step": "Lascia il campo 'email' vuoto", "expected": "Viene mostrato un messaggio di errore" }
  ],
  "test_type": "Negativo",
  "priority": "Medium",
  "use_case_id": "UC2"
}

Genera:
- Almeno 4 test case per UC.
- Sia test positivi che negativi.
- `test_type` dev’essere "Positive" o "Negative".
- Ogni `test_case_id` deve iniziare con l’ID del caso d’uso.

Non spiegare nulla. Restituisci **solo** l’array JSON risultante. Non mettere "```json" all'inizio della risposta e "```" alla fine.
Apri e chiudi correttamente le parentesi.

Il seguente è il caso d’uso in formato TXT:

Id: UC2.1
Title: Download PDF
Summary: Download del PDF relativo alle informazioni della dashboard
Actor: Regione, Sindaco, Fornitore
Precondition: L’utente visualizza la sezione relativa alla dashboard
Postcondition: L’utente ha scaricato il file, può aprirlo dalla apposita sezione del browser utilizzato ed il file è ben formato
Base_sequence:
1) L’utente inizia il processo di download cliccando sul tasto dedicato
2) L’utente conferma la richiesta
3) L’utente visualizza un messaggio di operazione completata con successo
Branch_sequence: no
Exception_sequence:
1) L’utente visualizza un messaggio di operazione completata con un errore relativo all’eccezione verificatasi
2) L’utente può ripartire dal punto 2 della base sequence
Note: no